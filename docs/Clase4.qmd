---
title: "Clase 4: Uso de landscapemetrics"
format: html
editor: visual
---

```{r, warning=FALSE, message=FALSE}
library(tidyverse)
library(landscapemetrics)
library(terra)
library(sf)
library(ggthemes)
library(ggspatial)
```

::: panel-tabset
## Cargar base de datos y raster

-   Cargar vector

```{r}
PuntosConteo <- st_read("data/Point_counts.gpkg")
```

-   Cargar Rater

```{r}
CoberturaYoro <- rast("data/ClasificacionYoro.tif")
```

-   Revisar proyeccion de capas

```{r}
st_crs(PuntosConteo) ==  st_crs(CoberturaYoro)
```

-   Visualizar ambas capas

```{r}
plot(CoberturaYoro)
plot(PuntosConteo["Site"], add= TRUE)
```

-   Visualizar con ggplot2

```{r}
Yoro_df <- as.data.frame(CoberturaYoro, xy = TRUE)


ggplot()+
  geom_raster(data= Yoro_df, aes(x=x, y=y, fill= ClasificacionYoro))+
  geom_sf(data= PuntosConteo) +
  theme_map()

```

## Uso de landscape metrics

[LandscapeMetrics](https://r-spatialecology.github.io/landscapemetrics/)

landscapemetrics is a R package for calculating landscape metrics for categorical landscape patterns in a tidy workflow. The package can be used as a drop-in replacement for FRAGSTATS (McGarigal et al. 2023), as it offers a reproducible workflow for landscape analysis in a single environment. It also allows for calculations of four theoretical metrics of landscape complexity: a marginal entropy, a conditional entropy, a joint entropy, and a mutual information (Nowosad and Stepinski 2019).

-   Primero seleccionaremos las metricas de paisaje a estimar

```{r}
head(landscapemetrics::lsm_abbreviations_names)

metric_explore1 <- c('lsm_c_ca')
```

-   Estimamos nuestras metricas aplicadas a la capa raster

```{r}

check_landscape(CoberturaYoro)

YoroPaisaje <- calculate_lsm(landscape = CoberturaYoro, what = metric_explore1)

```

```{r}
YoroPaisaje
```

## Ejercicio

Tomando en cuenta que:

1 = Zona Urbana 2 = Cafe sombra 3 = Cafe sol 4 = Grama 5 = Bosque 6 = Suelo desnudo

-   Crear buffer de \~535 metros en cada punto de conteo

```{r}

Buffer500 <- st_buffer(PuntosConteo, 0.005)

plot(Buffer500["Type"])
```

-   Preparar un buffer de x sitio

```{r}

Buffer_site3 <- Buffer500 %>% 
  filter(Site == "3")
  
plot(Buffer_site3)

Site3_land <- mask(CoberturaYoro, Buffer_site3)
plot(Site3_land)
```

-   Estimat el area de cada cobertura

```{r}
check_landscape(Site3_land)

# View(landscapemetrics::lsm_abbreviations_names)

AreaGrados <- calculate_lsm(landscape = Site3_land, what = "lsm_c_ca")

AreaGrados %>% 
  mutate(Porc = value/sum(value) * 100) 


```

```{r}
plot(crop(CoberturaYoro, Buffer_site3))
```
:::

![HN Biology Investigation Academy](HN%20Cursos%20publicidad/HN%20Biology%20Inv%20large.jpg)
