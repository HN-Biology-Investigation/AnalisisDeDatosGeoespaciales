---
title: "Conectividad ecológica y conectividad genética"
author: "David Murillo"
format: html
editor: visual
---

La conectividad es un concepto central en ecología y conservación. Se refiere a cómo el paisaje facilita o impide el movimiento de organismos, genes, agua, nutrientes y energía entre diferentes hábitats.

- Conectividad ecológica describe la capacidad de los organismos para moverse libremente por el paisaje. Esta puede ser estructural (basada en la continuidad física de los hábitats, como corredores o parches conectados) o funcional (basada en el comportamiento de las especies, su capacidad de atravesar diferentes tipos de hábitat).

- Conectividad genética, por otro lado, se refiere al intercambio de genes entre poblaciones a través del movimiento de individuos reproductores. La conectividad genética es vital para mantener la diversidad genética, evitar la endogamia y permitir la adaptación evolutiva a largo plazo.

Aunque relacionadas, conectividad ecológica y genética no siempre son equivalentes: un paisaje puede parecer conectado físicamente, pero no garantizar suficiente flujo genético si las especies no logran reproducirse tras moverse.

Entender y gestionar ambos tipos de conectividad es crucial para diseñar estrategias efectivas de conservación, especialmente en paisajes fragmentados por actividades humanas.

::: panel.tabset

## Conectividad ecológica - Makurhini

[Makurhini](https://connectscape.github.io/Makurhini/) es un paquete de R diseñado para facilitar el análisis detallado de fragmentación y conectividad del paisaje, dos procesos clave en la conservación de la biodiversidad. El nombre Makurhini proviene de una palabra indígena purépecha que significa "camino" o "conexión", reflejando el enfoque del paquete en los flujos ecológicos entre fragmentos de hábitat.

Makurhini permite:

- Calcular métricas de conectividad tanto estructural (basada en la disposición física del paisaje) como funcional (considerando el movimiento de especies según distancias o resistencias).

- Estimar índices como el Probability of Connectivity (PC), Integral Index of Connectivity (IIC), flux y otros indicadores que miden la importancia de fragmentos, la cantidad de hábitat disponible y los cambios en conectividad a través del tiempo.

- Trabajar con análisis de escenarios, optimización de redes de conservación y comparaciones entre múltiples paisajes.

El paquete integra capacidades de procesamiento espacial avanzadas usando terra y sf, y está diseñado para trabajar de forma flexible con grandes conjuntos de datos.

¿Para qué sirve?

- Evaluar el impacto de la fragmentación sobre especies.

- Priorizar áreas para restauración o conservación basadas en su contribución a la conectividad.

- Comparar escenarios de cambio de paisaje (por ejemplo, deforestación, expansión urbana).

[Makurhini: An R package for comprehensive analysis of landscape fragmentation and connectivity](https://doi.org/10.21203/rs.3.rs-6398746/v1)

```{r}
#library(devtools)
#library(remotes)
# install_github("connectscape/Makurhini", dependencies = TRUE)

library(Makurhini)
library(terra)
library(sf)

```

```{r}
data("habitat_nodes", package = "Makurhini")
```

`MK_dPCIIC` calcula el índice dPC (delta Probability of Connectivity) o sus componentes (intra, flux, connector) para múltiples umbrales de distancia.

```{r}
PC_example <- MK_dPCIIC(nodes = habitat_nodes, 
                        attribute = NULL, 
                        distance =list(type = "centroid"),
                        parallel = NULL, 
                        metric = "PC", 
                        probability = 0.5, 
                        distance_thresholds = c(250, 1500, 3000, 10000))

plot(PC_example$d250["dPC"])
```

- dPC: Valor total de conectividad asociado a ese parche. Este valor representa cuánto contribuye el parche a la conectividad total del paisaje. Parches con valores altos son más importantes para mantener la conectividad general.

- dPCintra: Esta parte representa la conectividad interna, que depende del tamaño del parche. Si es igual al dPC, significa que el parche no está conectado a otros (o que la especie no puede moverse a otros parches dentro del umbral de distancia).

- dPCflux: Representa el flujo de conectividad directa con otros parches. Si este valor es 0, el parche no tiene conexiones directas dentro del umbral de dispersión.

- dPCconnector: Mide el valor del parche como puente entre otros. Un valor alto indica que el parche sirve como paso intermedio para conectar otros parches que de otra forma estarían aislados.


## 
# Grainscape

[The r toolbox grainscape for modelling and visualizing landscape connectivity using spatially explicit networks](https://doi.org/10.1111/2041-210X.13350)

```{r}
library(grainscape)

tiny <- raster::raster(system.file("extdata/tiny.asc", package = "grainscape"))

## Create a resistance surface from a raster using an is-becomes reclassification
tinyCost <- raster::reclassify(tiny, rcl = cbind(c(1, 2, 3, 4), c(1, 5, 10, 12)))
## Produce a patch-based MPG where patches are resistance features=1
tinyPatchMPG <- MPG(cost = tinyCost, patch = tinyCost == 1)
## Extract a representative subset of 5 grains of connectivity
tinyPatchGOC <- GOC(tinyPatchMPG, nThresh = 5)
## Quick visualization of a corridor
corridorStartEnd <- rbind(c(10, 10), c(90, 90))
tinyPatchCorridor <- corridor(tinyPatchGOC, whichThresh = 3, coords = corridorStartEnd)
if (interactive())
  plot(tinyPatchCorridor)

## More control over a corridor visualization
if (interactive()) {
  plot(tinyPatchCorridor@voronoi, col = "lightgrey", lwd = 2)
  plot(tinyPatchCorridor@linksSP, col = "darkred", lty = "dashed", add = TRUE)
  plot(tinyPatchCorridor@nodesSP, col = "darkred", pch = 21, bg = "white", add = TRUE)
  plot(tinyPatchCorridor@shortestLinksSP, col = "darkred", lty = "solid", lwd = 2, add = TRUE)
  plot(tinyPatchCorridor@shortestNodesSP, col = "darkred", pch = 21, bg = "darkred", add = TRUE)
  mtext(paste("Corridor shortest path length:",
              round(tinyPatchCorridor@corridorLength, 2),
              "resistance units"), side = 1)
}
```

# Conectividad genetica

:::

[HN Biology Investigation Academy](HN Cursos publicidad/HN Biology Inv large.jpg)
